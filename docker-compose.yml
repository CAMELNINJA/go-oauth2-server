version: "2"

networks:
  default:
    driver: bridge

services:
  etcd:
    image: quay.io/coreos/etcd
    command: etcd --initial-cluster-state new --listen-client-urls http://0.0.0.0:2379 --advertise-client-urls http://127.0.0.1:2379
    volumes:
      - "etcd-data:/default.etcd"
    environment:
      - ETCDCTL_API=3
    networks:
      - default

  etcd_config:
    build:
      context: .
      dockerfile: ./Dockerfile-etcd-config
    networks:
      - default
    volumes:
      - "etcd-data:/default.etcd"
    environment:
      - ETCDCTL_API=3
      - ETCDCTL_ENDPOINTS=etcd:2379
    depends_on:
      - etcd
    links:
      - etcd

  postgres:
    image: "postgres"
    networks:
      - default
    volumes:
      - "db-data:/var/lib/postgresql/data/pgdata"
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_USER: "go_oauth2_server"
      POSTGRES_PASSWORD: ""
      POSTGRES_DB: "go_oauth2_server"
      POSTGRES_HOST_AUTH_METHOD: "trust"

  app:
    container_name: go_oauth2_server
    image: go-oauth2-server:latest
    depends_on:
      - etcd_config
      - postgres
    links:
      - etcd
      - postgres
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    networks:
      - default
    environment:
      ETCD_ENDPOINTS: "http://etcd:2379"
    command: [runserver]

  app_testdata:
    container_name: go_oauth2_server_testdata
    image: go-oauth2-server:latest
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      ETCD_ENDPOINTS: "http://etcd:2379"
    depends_on:
      - etcd_config
      - postgres
    links:
      - etcd
      - postgres
    networks:
      - default
    command: ["client", "ghost_gate", "o2JPO2Jf5ZAOsEfziTvuBt" , "http://localhost:8080"]

volumes:
  etcd-data:
  db-data:
